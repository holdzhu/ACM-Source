#include <cstdio>

int abs(int a)
{
	return (a >= 0) ? a : -a;
}

int main()
{
	int n;
	int a[4], b[4], x[4], y[4];
	scanf("%d", &n);
	while (n--)
	{
		int _x[4][4], _y[4][4];
		for (int i = 0; i < 4; ++i)
		{
			scanf("%d %d %d %d", &x[i], &y[i], &a[i], &b[i]);
			_x[i][0] = x[i];
			_y[i][0] = y[i];
			// printf("%d %d\n", _x[i][0], _y[i][0]);
			for (int j = 0; j < 3; ++j)
			{
				_x[i][j + 1] = a[i] + b[i] - _y[i][j];
				_y[i][j + 1] = b[i] + _x[i][j] - a[i];
				// printf("%d %d\n", _x[i][j + 1], _y[i][j + 1]);
			}
		}
		int mins = -1;
		int s = 0;
		for (int m0 = 0; m0 < 4; ++m0)
		{
			s += m0;
			for (int m1 = 0; m1 < 4; ++m1)
			{
				s += m1;
				for (int m2 = 0; m2 < 4; ++m2)
				{
					s += m2;
					for (int m3 = 0; m3 < 4; ++m3)
					{
						s += m3;
						if (_x[0][m0] == _x[1][m1] && _y[0][m0] != _y[1][m1])
						{
							int l = abs(_y[0][m0] - _y[1][m1]);
							if (_y[2][m2] == _y[0][m0] && _x[2][m2] - _x[0][m0] == l && _y[3][m3] == _y[1][m1] && _x[3][m3] - _x[1][m1] == l ||
								_y[2][m2] == _y[0][m0] && _x[2][m2] - _x[0][m0] == -l && _y[3][m3] == _y[1][m1] && _x[3][m3] - _x[1][m1] == -l ||
								_y[3][m3] == _y[0][m0] && _x[3][m3] - _x[0][m0] == l && _y[2][m2] == _y[1][m1] && _x[2][m2] - _x[1][m1] == l ||
								_y[3][m3] == _y[0][m0] && _x[3][m3] - _x[0][m0] == -l && _y[2][m2] == _y[1][m1] && _x[2][m2] - _x[1][m1] == -l )
							{
								if (s < mins || mins == -1)
								{
									mins = s;
								}
							}
						}
						if (_x[0][m0] == _x[2][m2] && _y[0][m0] != _y[2][m2])
						{
							int l = abs(_y[0][m0] - _y[2][m2]);
							if (_y[1][m1] == _y[0][m0] && _x[1][m1] - _x[0][m0] == l && _y[3][m3] == _y[2][m2] && _x[3][m3] - _x[2][m2] == l ||
								_y[1][m1] == _y[0][m0] && _x[1][m1] - _x[0][m0] == -l && _y[3][m3] == _y[2][m2] && _x[3][m3] - _x[2][m2] == -l ||
								_y[3][m3] == _y[0][m0] && _x[3][m3] - _x[0][m0] == l && _y[1][m1] == _y[2][m2] && _x[1][m1] - _x[2][m2] == l ||
								_y[3][m3] == _y[0][m0] && _x[3][m3] - _x[0][m0] == -l && _y[1][m1] == _y[2][m2] && _x[1][m1] - _x[2][m2] == -l )
							{
								if (s < mins || mins == -1)
								{
									mins = s;
								}
							}
						}
						if (_x[0][m0] == _x[3][m3] && _y[0][m0] != _y[3][m3])
						{
							int l = abs(_y[0][m0] - _y[3][m3]);
							if (_y[1][m1] == _y[0][m0] && _x[1][m1] - _x[0][m0] == l && _y[2][m2] == _y[3][m3] && _x[2][m2] - _x[3][m3] == l ||
								_y[1][m1] == _y[0][m0] && _x[1][m1] - _x[0][m0] == -l && _y[2][m2] == _y[3][m3] && _x[2][m2] - _x[3][m3] == -l ||
								_y[2][m2] == _y[0][m0] && _x[2][m2] - _x[0][m0] == l && _y[1][m1] == _y[3][m3] && _x[1][m1] - _x[3][m3] == l ||
								_y[2][m2] == _y[0][m0] && _x[2][m2] - _x[0][m0] == -l && _y[1][m1] == _y[3][m3] && _x[1][m1] - _x[3][m3] == -l )
							{
								if (s < mins || mins == -1)
								{
									mins = s;
								}
							}
						}
						if (_x[1][m1] == _x[3][m3] && _y[1][m1] != _y[3][m3])
						{
							int l = abs(_y[1][m1] - _y[3][m3]);
							if (_y[0][m0] == _y[1][m1] && _x[0][m0] - _x[1][m1] == l && _y[2][m2] == _y[3][m3] && _x[2][m2] - _x[3][m3] == l ||
								_y[0][m0] == _y[1][m1] && _x[0][m0] - _x[1][m1] == -l && _y[2][m2] == _y[3][m3] && _x[2][m2] - _x[3][m3] == -l ||
								_y[2][m2] == _y[1][m1] && _x[2][m2] - _x[1][m1] == l && _y[0][m0] == _y[3][m3] && _x[0][m0] - _x[3][m3] == l ||
								_y[2][m2] == _y[1][m1] && _x[2][m2] - _x[1][m1] == -l && _y[0][m0] == _y[3][m3] && _x[0][m0] - _x[3][m3] == -l )
							{
								if (s < mins || mins == -1)
								{
									mins = s;
								}
							}
						}
						if (_x[2][m2] == _x[3][m3] && _y[2][m2] != _y[3][m3])
						{
							int l = abs(_y[2][m2] - _y[3][m3]);
							if (_y[0][m0] == _y[2][m2] && _x[0][m0] - _x[2][m2] == l && _y[1][m1] == _y[3][m3] && _x[1][m1] - _x[3][m3] == l ||
								_y[0][m0] == _y[2][m2] && _x[0][m0] - _x[2][m2] == -l && _y[1][m1] == _y[3][m3] && _x[1][m1] - _x[3][m3] == -l ||
								_y[1][m1] == _y[2][m2] && _x[1][m1] - _x[2][m2] == l && _y[0][m0] == _y[3][m3] && _x[0][m0] - _x[3][m3] == l ||
								_y[1][m1] == _y[2][m2] && _x[1][m1] - _x[2][m2] == -l && _y[0][m0] == _y[3][m3] && _x[0][m0] - _x[3][m3] == -l )
							{
								if (s < mins || mins == -1)
								{
									mins = s;
								}
							}
						}
						if (_x[2][m2] == _x[1][m1] && _y[2][m2] != _y[1][m1])
						{
							int l = abs(_y[2][m2] - _y[1][m1]);
							if (_y[0][m0] == _y[2][m2] && _x[0][m0] - _x[2][m2] == l && _y[3][m3] == _y[1][m1] && _x[3][m3] - _x[1][m1] == l ||
								_y[0][m0] == _y[2][m2] && _x[0][m0] - _x[2][m2] == -l && _y[3][m3] == _y[1][m1] && _x[3][m3] - _x[1][m1] == -l ||
								_y[3][m3] == _y[2][m2] && _x[3][m3] - _x[2][m2] == l && _y[0][m0] == _y[1][m1] && _x[0][m0] - _x[1][m1] == l ||
								_y[3][m3] == _y[2][m2] && _x[3][m3] - _x[2][m2] == -l && _y[0][m0] == _y[1][m1] && _x[0][m0] - _x[1][m1] == -l )
							{
								if (s < mins || mins == -1)
								{
									mins = s;
								}
							}
						}
						s -= m3;
					}
					s -= m2;
				}
				s -= m1;
			}
			s -= m0;
		}
		printf("%d\n", mins);
	}
	return 0;
}
